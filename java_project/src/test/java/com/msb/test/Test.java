package com.msb.test;import java.io.*;import java.util.ArrayList;import java.util.Comparator;public class Test {//    学习文件的位置调整和序号添加    public static void main(String[] args) throws IOException {        File file1 = new File("D:\\BaiduNetdiskWorkspace\\msb Java高级工程师\\26--Spring（10小时39分钟） NO.867\\1--Spring NO.867");        File file2 = new File("D:\\BaiduNetdiskWorkspace\\msb Java高级工程师\\26--Spring（10小时39分钟） NO.867");        Integer count = 0;        File[] files = file1.listFiles();        ArrayList<File> fileArrayList1 = new ArrayList<>();        for (File file : files) {            if (file.getName().contains("章节")){                fileArrayList1.add(file);            }        }        fileArrayList1.sort(new Comparator<File>() {            @Override            public int compare(File o1, File o2) {                StringBuilder o1Name = new StringBuilder();                StringBuilder o2Name = new StringBuilder();                for (int i = 0; i < 8; i++) {                    if (o1.getName().charAt(i)>='0'&&o1.getName().charAt(i)<='9'){                        o1Name.append(o1.getName().charAt(i));                    }                }                for (int i = 0; i < 8; i++) {                    if (o2.getName().charAt(i)>='0'&&o2.getName().charAt(i)<='9'){                        o2Name.append(o2.getName().charAt(i));                    }                }                String o1Str = o1Name.toString();                String o2Str = o2Name.toString();                Integer o1Int = Integer.valueOf(o1Str);                Integer o2Int = Integer.valueOf(o2Str);                return o1Int-o2Int ;            }        });        for (File file3 : fileArrayList1) {            if (file3.getName().contains("章节")){                File[] files1 = file3.listFiles();                ArrayList<File> fileArrayList2 = new ArrayList<>();                for (File file : files1) {                    fileArrayList2.add(file);                }                fileArrayList2.sort(new Comparator<File>() {                    @Override                    public int compare(File o1, File o2) {                        StringBuilder o1Name = new StringBuilder();                        StringBuilder o2Name = new StringBuilder();                        for (int i = 0; i < 5; i++) {                            if (o1.getName().charAt(i)>='0'&&o1.getName().charAt(i)<='9'){                                o1Name.append(o1.getName().charAt(i));                            }                        }                        for (int i = 0; i < 5; i++) {                            if (o2.getName().charAt(i)>='0'&&o2.getName().charAt(i)<='9'){                                o2Name.append(o2.getName().charAt(i));                            }                        }                        String o1Str = o1Name.toString();                        String o2Str = o2Name.toString();                        Integer o1Int = Integer.valueOf(o1Str);                        Integer o2Int = Integer.valueOf(o2Str);                        return o1Int-o2Int ;                    }                });                for (File file : fileArrayList2) {                    count++;                    String path = "";                    if (count<10){                        path = file2.getAbsolutePath()+"\\\\"+0+count+'#'+file.getName();                    }else{                        path = file2.getAbsolutePath()+"\\\\"+count+'#'+file.getName();                    }                    File file4 = new File(path);                    FileInputStream fileInputStream = new FileInputStream(file);                    FileOutputStream fileOutputStream = new FileOutputStream(file4);                    BufferedInputStream bufferedInputStream = new BufferedInputStream(fileInputStream);                    BufferedOutputStream bufferedOutputStream = new BufferedOutputStream(fileOutputStream);                    byte[] b = new byte[1024*100];                    int len = bufferedInputStream.read(b);                    while(len!=-1){                        bufferedOutputStream.write(b,0,len);                        len = bufferedInputStream.read(b);                    }                }            }        }    }}